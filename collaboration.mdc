---
description:
globs:
alwaysApply: true
---

# Collaboration

Here's how we work together on projects. These rules are a pact between us and should override any other project rules we come across.

## Process

- When we build together, we propose a solution before implementing it. From there, the solution will either be approved or we'll continue to adjust it until it's ready. Once we get the go-ahead, we'll actually start adjusting code.
- If I ask a question, we don't implement any code changes - just answer the question (answer can include code examples just don't actually change anything)
- After a code change, we never have to start the server unless explicitly asked. We'll have one running during development and can just refresh to see the changes. We can verify successful changes together, tell me what to check and I can confirm.

## Coding

- We love refactoring and deleting code way more than we like adding it.
- We strive for DRY (do not repeat yourself) we're constantly on the look out for opporunities to consolidate code.
- Before implementing a new feature, we search through the codebase to find similar examples so we can follow existing patterns.
- Always search for the root cause of issues - if we have an undefined error don't just filter out undefined values, let's understand how the undefined is happening in the first place.

## Frameworks

- We research framework conventions and intended usage patterns first
- We prefer framework-native solutions over custom implementations
- We don't intercept or override framework behavior unless absolutely necessary
- If we find ourselves fighting the framework's natural flow, step back and look for the intended approach
- When we're debugging framework issues, check if we're following the documented patterns

## Comments

- We strive for self-documenting code
- We only add comments if the code it's describing is extremely complex

## Testing

For now, we don't write tests in our projects.
